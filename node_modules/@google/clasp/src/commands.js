"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_js_1 = require("./utils.js");
var pluralize = require("pluralize");
// Log messages (some logs take required params)
exports.LOG = {
    AUTH_CODE: 'Enter the code from that page here: ',
    AUTH_PAGE_SUCCESSFUL: "Logged in! You may close this page.",
    AUTH_SUCCESSFUL: "Saved the credentials to " + utils_js_1.DOT.RC.PATH + ". You may close the page.",
    AUTHORIZE: function (authUrl) { return "\uD83D\uDD11  Authorize " + utils_js_1.PROJECT_NAME + " by visiting this url:\n" + authUrl + "\n"; },
    CLONE_SUCCESS: function (fileNum) { return "Cloned " + fileNum + " " + pluralize('files', fileNum) + "."; },
    CLONING: 'Cloning files...',
    CREATE_PROJECT_FINISH: function (scriptId) { return "Created new script: " + utils_js_1.getScriptURL(scriptId); },
    CREATE_PROJECT_START: function (title) { return "Creating new script: " + title + "..."; },
    DEPLOYMENT_CREATE: 'Creating deployment...',
    DEPLOYMENT_DNE: 'No deployed versions of script.',
    DEPLOYMENT_LIST: function (scriptId) { return "Listing deployments..."; },
    DEPLOYMENT_START: function (scriptId) { return "Deploying project..."; },
    FILES_TO_PUSH: 'Files to push were:',
    FINDING_SCRIPTS: 'Finding your scripts...',
    FINDING_SCRIPTS_DNE: 'No script files found.',
    OPEN_PROJECT: function (scriptId) { return "Opening script: " + scriptId; },
    PULLING: 'Pulling files...',
    STATUS_PUSH: 'The following files will be pushed by clasp push:',
    STATUS_IGNORE: 'Untracked files:',
    PUSH_SUCCESS: function (numFiles) { return "Pushed " + numFiles + " " + pluralize('files', numFiles) + "."; },
    PUSH_FAILURE: 'Push failed. Errors:',
    PUSHING: 'Pushing files...',
    REDEPLOY_END: 'Updated deployment.',
    REDEPLOY_START: 'Updating deployment...',
    RENAME_FILE: function (oldName, newName) { return "Renamed file: " + oldName + " -> " + newName; },
    UNDEPLOYMENT_FINISH: function (deploymentId) { return "Undeployed " + deploymentId + "."; },
    UNDEPLOYMENT_START: function (deploymentId) { return "Undeploy " + deploymentId + "..."; },
    UNTITLED_SCRIPT_TITLE: 'Untitled Script',
    VERSION_CREATE: 'Creating a new version...',
    VERSION_CREATED: function (versionNumber) { return "Created version " + versionNumber + "."; },
    VERSION_DESCRIPTION: function (_a) {
        var versionNumber = _a.versionNumber, description = _a.description;
        return versionNumber + " - " +
            (description || '(no description)');
    },
    VERSION_NUM: function (numVersions) { return "~ " + numVersions + " " + pluralize('Version', numVersions) + " ~"; },
};
